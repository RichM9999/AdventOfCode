//https://adventofcode.com/2023/day/16
using System.ComponentModel;

namespace AdventOfCode.Year2023
{
    class Day16
    {
        const int mapSize = 110;
        char[,] map;
        char[,] mapEnergized;

        List<(int x, int y, char direction)> visited;

        public Day16()
        {
            map = new char[mapSize, mapSize];
            mapEnergized = new char[mapSize, mapSize];
            visited = [];
        }

        public void Run()
        {
            var start = DateTime.Now;

            GetData();

            mapEnergized[0, 0] = '#';
            ProcessBeam(-1, 0, 'R');

            Console.WriteLine($"Number of energized tiles: {CountEnergized()}");
            // 6883
            Console.WriteLine($"{(DateTime.Now - start).TotalMilliseconds}ms");

            // Part 2
            start = DateTime.Now;

            long energized = 0;

            // Test all starting points along top/bottom edge
            for (var x = 0; x < mapSize; x++)
            {
                GetData();

                mapEnergized[x, 0] = '#';
                ProcessBeam(x, -1, 'D');

                energized = Math.Max(energized, CountEnergized());

                GetData();

                mapEnergized[x, mapSize - 1] = '#';
                ProcessBeam(x, mapSize, 'U');

                energized = Math.Max(energized, CountEnergized());
            }

            // Test all starting points along left/right edge
            for (var y = 0; y < mapSize; y++)
            {
                GetData();

                mapEnergized[0, y] = '#';
                ProcessBeam(-1, y, 'R');

                energized = Math.Max(energized, CountEnergized());

                GetData();

                mapEnergized[mapSize - 1, y] = '#';
                ProcessBeam(mapSize, y, 'L');

                energized = Math.Max(energized, CountEnergized());
            }

            Console.WriteLine($"Count energized from optimal starting point: {energized}");
            // 7228
            Console.WriteLine($"{(DateTime.Now - start).TotalMilliseconds}ms");
        }

        long CountEnergized()
        {
            long energized = 0;

            for (var x = 0; x < mapSize; x++)
            {
                for (var y = 0; y < mapSize; y++)
                {
                    energized += mapEnergized[x, y] == '#' ? 1 : 0;
                }
            }

            return energized;
        }

        void ProcessBeam(int x, int y, char direction)
        {
            while (true)
            {
                // prevent looping
                if (visited.Contains((x, y, direction)))
                    return;

                visited.Add((x, y, direction));

                if (x >= 0 && y >= 0 && x < mapSize && y < mapSize)
                    mapEnergized[x, y] = '#';

                switch (direction)
                {
                    case 'R':
                        // Next space is off the grid
                        if (x == mapSize - 1)
                            return;

                        switch (map[x + 1, y])
                        {
                            case '.':
                            case '-':
                                x++;
                                continue;
                            case '|':
                                // Split up and down starting at next space
                                ProcessBeam(x + 1, y, 'U');
                                ProcessBeam(x + 1, y, 'D');
                                return;
                            case '\\':
                                x++;
                                mapEnergized[x, y] = '#';

                                //Deflect down and continue
                                direction = 'D';
                                continue;
                            case '/':
                                x++;
                                mapEnergized[x, y] = '#';

                                //Deflect up and continue
                                direction = 'U';
                                continue;
                        }
                        break;
                    case 'L':
                        // Next space is off the grid
                        if (x == 0)
                            return;

                        switch (map[x - 1, y])
                        {
                            case '.':
                            case '-':
                                x--;
                                continue;
                            case '|':
                                // Split up and down starting at next space
                                ProcessBeam(x - 1, y, 'U');
                                ProcessBeam(x - 1, y, 'D');
                                return;
                            case '\\':
                                x--;
                                mapEnergized[x, y] = '#';

                                //Deflect up and continue
                                direction = 'U';
                                continue;
                            case '/':
                                x--;
                                mapEnergized[x, y] = '#';

                                //Deflect down and continue
                                direction = 'D';
                                continue;
                        }
                        break;
                    case 'U':
                        // Next space is off the grid
                        if (y == 0)
                            return;

                        switch (map[x, y - 1])
                        {
                            case '.':
                            case '|':
                                y--;
                                continue;
                            case '-':
                                // Split left and right starting at next space
                                ProcessBeam(x, y - 1, 'L');
                                ProcessBeam(x, y - 1, 'R');
                                return;
                            case '\\':
                                y--;
                                mapEnergized[x, y] = '#';

                                //Deflect left and continue
                                direction = 'L';
                                continue;
                            case '/':
                                y--;
                                mapEnergized[x, y] = '#';

                                //Deflect right and continue
                                direction = 'R';
                                continue;
                        }
                        break;
                    case 'D':
                        // Next space is off the grid
                        if (y == mapSize - 1)
                            return;

                        switch (map[x, y + 1])
                        {
                            case '.':
                            case '|':
                                y++;
                                continue;
                            case '-':
                                // Split left and right starting at next space
                                ProcessBeam(x, y + 1, 'L');
                                ProcessBeam(x, y + 1, 'R');
                                return;
                            case '\\':
                                y++;
                                mapEnergized[x, y] = '#';

                                //Deflect right and continue
                                direction = 'R';
                                continue;
                            case '/':
                                y++;
                                mapEnergized[x, y] = '#';

                                //Deflect left and continue
                                direction = 'L';
                                continue;
                        }
                        break;
                }
            }
        }

        void AddRow(int row, string line)
        {
            for (var x = 0; x < mapSize; x++) 
            {
                map[x, row] = line[x];
                mapEnergized[x, row] = '.';
            }
        }

        void GetData()
        {
            var row = 0;

            // Clear list of visited spaces
            visited = [];

            AddRow(row++, @"\.........../../..\.\.\................|..-...\........./.......-.....................-...\...--....../..\....");
            AddRow(row++, @"........|............|............-.........|....\.................\-.........../...../....-../....\..........");
            AddRow(row++, @".-....................\\..................|.\..........\.........../.............................-...-........");
            AddRow(row++, @"............-.....\/...........-........-......................-..-...../...............|................/....");
            AddRow(row++, @".......\....-...-...............|.............-...................../....-../............./\..........-..\....");
            AddRow(row++, @"..................-.............\.........\........-......./..../..|....|......-/............\.............\..");
            AddRow(row++, @"-...............|.........\........../.\........../......./-..........-...-.....-............................|");
            AddRow(row++, @".\\...\..........-............./...-|...................../.......-.................-....../.........|........");
            AddRow(row++, @"..................../........................./..\...................\.................-/......./.............");
            AddRow(row++, @"../...................|...../.-..................-.....|....-.|....................../.../\....-....|..\..|.\.");
            AddRow(row++, @"..................|..................................-....|.........\................................./.......");
            AddRow(row++, @".........-...........-........\..|-...................--.............-.../......./....................\..-....");
            AddRow(row++, @"-..........-.................\.....|......|.\................|../..........\.........\.|.............-....\...");
            AddRow(row++, @"......./....-....|....-..........|........-...-....-.....-............................................/../....");
            AddRow(row++, @".......\...........|.......\....\.//\.............\...../|....-...../..|....-................/................");
            AddRow(row++, @".........\........./............\.-.|......./..........................|....\........-.-.............../..|-.|");
            AddRow(row++, @".............................\......|....-../.....\.....-..../.........................\......|....../...\/...");
            AddRow(row++, @".../.\.........../................................./.\.\...............\..............\.....|........-........");
            AddRow(row++, @"..................\......-......|..................\................................/.../.|...................");
            AddRow(row++, @"...\\............................\./................../............................-.......-..|...............");
            AddRow(row++, @"/.............\...-....\...//..-..\....-......-.\............../.....|../.........|..../........\......\......");
            AddRow(row++, @"./..........-.........\..-.................-.|...........\.......-.......|...................|../.............");
            AddRow(row++, @".....-./.\..../.|.............../...........|..../....\...\/..-.........|....-.........|......................");
            AddRow(row++, @"...../.|.............../.....................\\../...|........\........./|-...........\/./.\\.................");
            AddRow(row++, @"..............\...-..............\.|......./........-...............-.-...|..\......-./..........-.......|../.");
            AddRow(row++, @".....|...............\....|............../................./....../...-........-.....|........\.........||../|");
            AddRow(row++, @".../................................../...............-......................................../.......-......");
            AddRow(row++, @"......../.........|..../...............|...../..|................./............|.../.....|....|..\........-...");
            AddRow(row++, @".../................................//-.......\........./......../....-.....-....-............................");
            AddRow(row++, @"........../....................|................................./.-......|.....\........-..............|..|..");
            AddRow(row++, @"........|...-............|.\.../.......................\...\../...........|../\.\-..../|\..|-...\......\....-.");
            AddRow(row++, @"...-.\..../.....||.....\./.-.....\..............-.......\.../...-....|......\...........-.....-....../........");
            AddRow(row++, @"...|-...|..........\.........../.......................-....../...............\.......\.....|.................");
            AddRow(row++, @"....\..../\\..........-........\............................/...........|.........|......|.|...........|...|..");
            AddRow(row++, @".............\............................../....|..\.\..../....................\..|...|..-............\....-.");
            AddRow(row++, @".-/|./...\....-\....-...\...............-.../............-..../.--............................|||.............");
            AddRow(row++, @"....../../\\...|..-.................\.............../.|\/............................../.........\.....|......");
            AddRow(row++, @"..../....................\..................../......\............-//.........................................");
            AddRow(row++, @".............\..../........../........-..............................|...-/....../..|....|.......-......../...");
            AddRow(row++, @"................-.|..\../...|.\..|..-.....-..../...................\..............\........................./.");
            AddRow(row++, @"........................../......\...............................-..../......................-...........-....");
            AddRow(row++, @"........\.-......................./...............\..............................\...../...................\..");
            AddRow(row++, @"..............................\..|..............|\.-..-....-..|..../.........\.............../.-..............");
            AddRow(row++, @"..........................\\./|.........\|\..............\......./.......-.-...................\.......-......");
            AddRow(row++, @".............|.........-..\..................|......-..|.-|.................--..||............-.|.............");
            AddRow(row++, @"..............\..\.\.\.........-./....../\../|../.......................\-.....\....|.........................");
            AddRow(row++, @".............................|.........\.....|..............................|.......././-.../.........-./....|");
            AddRow(row++, @"\.....................\.../..................................-......./........../..\.\.................|......");
            AddRow(row++, @"...............-......................../.....................................................................");
            AddRow(row++, @"..../........./........-.....|................/../....\.........../../.././........./......................-..");
            AddRow(row++, @".......\................/............................................\........../..\.\......|/|\..............");
            AddRow(row++, @"...........\.............................\\......\\..|..-\................../.-.....................-.........");
            AddRow(row++, @"........|../..\...............|......./.................................|......|./....../......-..............");
            AddRow(row++, @"........./................\.............|...............-.........-.....\.............../.\..........|........");
            AddRow(row++, @".........................|......./....................-......|........\.........................|/............");
            AddRow(row++, @".\..-.......................................-....|.................................|\./.\.....................");
            AddRow(row++, @"\../................................-.-.....-..................../....../......../\...|..|......../.......\...");
            AddRow(row++, @"........................../..............\|............./..../.................../...\....\/..................");
            AddRow(row++, @"../-.........................\...\......\......................|.......\..\...\...\.................-..|....\.");
            AddRow(row++, @"....-...................\......-........../......../...............|................................/.........");
            AddRow(row++, @".................................../......|.......|......................................|..\........-........");
            AddRow(row++, @"......|..|....-..................\./.............../.|...............|.|/.......\.\...........................");
            AddRow(row++, @"...............|...........|.....\................................................|................\.....|....");
            AddRow(row++, @"......../...|......../.................../../...........|...|............./.............\..|.../........-.....");
            AddRow(row++, @".....................-............\...|..........|...-..........|..-..../...-...../......|....................");
            AddRow(row++, @"...\.......\.....-..................................|/.....\......|.....................|.......|......./.-...");
            AddRow(row++, @".....................|........./...............|.-...........\........|......|...-/............../.-..........");
            AddRow(row++, @"......./....../.......-....-..............\../\.......\................................................|......");
            AddRow(row++, @"................../.......\\.......................|...\........|...\........-....\..-..........\...../..-....");
            AddRow(row++, @"...............................................-.........................\................\............../..\.");
            AddRow(row++, @"....|......../.........\.........-../....-....................\..................|............................");
            AddRow(row++, @"................./.-../\..........-.....|.........\.........\..../.............................|........--/...");
            AddRow(row++, @"................|./...............|.......\....-\........-.....................-.....|..................../-..");
            AddRow(row++, @"...........\........................|../...-./......\...............\........-./......|.................|..\..");
            AddRow(row++, @".......|-....../...........|..........|............/.............../.|....../...................\.............");
            AddRow(row++, @"...../...../..........|.......................|....................|.........\|............................\..");
            AddRow(row++, @"........-........\......./....\.............//................................./......./...................|..");
            AddRow(row++, @"..-......../...................-...../.........-...................|..........................\....../.-......");
            AddRow(row++, @"./............................\...............................|............|...../.|................|.........");
            AddRow(row++, @"......\................|.............................-.........\.................................../-........\");
            AddRow(row++, @"./-/..........|.................................../........\....\.....\.....................\.\.........|.....");
            AddRow(row++, @".-............../../........./.........-......\.....................\..\..\..\/......-./.../....|.............");
            AddRow(row++, @".....|..................-...\||.......\./../........................-.........................-..........\....");
            AddRow(row++, @"...-................/.|........-....................................|..\....-...\......-..|............/......");
            AddRow(row++, @"..........\...............|.|...-.............-.././...................../.../................................");
            AddRow(row++, @".......\./............./........../..\............\............-\......|......|....|.........../|.............");
            AddRow(row++, @"............\....|...........|...............-........\..|\..-.....-...|....................\..../.......-....");
            AddRow(row++, @"........\.....\...................|......./......-........./....\-...................|................\....-..");
            AddRow(row++, @"../......................../................-...|..........\........../...................................|.\.");
            AddRow(row++, @".....................-..../......../........./........./.........\.......|/-...........|.........\...../...../");
            AddRow(row++, @"......//..................\.|....|..|..\...\-........./...........\............/..................|...-.....\.");
            AddRow(row++, @".....-..-....../..................\....\........................|......................../....|........\..|.\.");
            AddRow(row++, @".........-............\..............\..\.\../............................\..-...-................./-.........");
            AddRow(row++, @"....|./..........\..-.................\..\...../.\...................-................/............|...../....");
            AddRow(row++, @"...\.................../.....-...../.-.././....-/......|..................|................/.............-....");
            AddRow(row++, @".....\.||.................\................\..|.....|.............\.\-.............-................./........");
            AddRow(row++, @".......\..........\....................|................/..............|.../..................\...-.-.||......");
            AddRow(row++, @".....-./..\.\.........................................|......./.............../....|..|.......-........\...\..");
            AddRow(row++, @".....|............./.....-...................|.\..../-............\.........................-................\");
            AddRow(row++, @"........\/............./......\......|-...|................../.....|-......................./..............\-.");
            AddRow(row++, @"..............-..../.....-..........||.-.....-.../................././.../............\/................./../.");
            AddRow(row++, @"-.....................................|.........-.....|...................|..................../.../..........");
            AddRow(row++, @".......................-..|................/...........\...........................|.--.....\..........|/..-..");
            AddRow(row++, @"...............\..................../..../.|..........................|.....................|..\...\....--....");
            AddRow(row++, @"....../.......-...............................|....../.........\.-........../.....................\.--...-....");
            AddRow(row++, @".-......\............/...-........|.....\........../|........................|..........\...|....../-.........");
            AddRow(row++, @"/............................../.....................................\........../|........-...............\..-");
            AddRow(row++, @".........\........\.|.|\..\.....-..............-.........-...........|........|...|...........-.............||");
            AddRow(row++, @".-\................\.......|...................................../..................-.-.....|...\..\.|........");
            AddRow(row++, @"\............-/../.......|............./......\\.\./.|......-/.\.\.............\........./|\.....-............");
        }
    }
}